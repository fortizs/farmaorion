using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.IO;
using System.Web;

namespace Farmacia.App_Code
{
	public class MimeTypes
	{
	 //   private static List<string> knownTypes;

	 //   private static Dictionary<string, string> mimeTypes;

		//[DllImport("urlmon.dll", CharSet = CharSet.Auto)]
		//private static extern UInt32 FindMimeFromData(
		//	UInt32 pBC, [MarshalAs(UnmanagedType.LPStr)]
		//string pwzUrl, [MarshalAs(UnmanagedType.LPArray)]
		//byte[] pBuffer, UInt32 cbSize, [MarshalAs(UnmanagedType.LPStr)]
		//string pwzMimeProposed, UInt32 dwMimeFlags, ref UInt32 ppwzMimeOut, UInt32 dwReserverd
		//);

		[DllImport(@"urlmon.dll", CharSet = CharSet.Auto)]
		private extern static System.UInt32 FindMimeFromData(System.UInt32 pBC,
		[MarshalAs(UnmanagedType.LPStr)] System.String pwzUrl,
		[MarshalAs(UnmanagedType.LPArray)] byte[] pBuffer,
		System.UInt32 cbSize, [MarshalAs(UnmanagedType.LPStr)] System.String pwzMimeProposed,
		System.UInt32 dwMimeFlags,
		out System.UInt32 ppwzMimeOut,
		System.UInt32 dwReserverd);

		public static string GetContentType1(HttpPostedFile file)
		{
			//string contentType = "";
			//HttpPostedFile file = FileUpload1.PostedFile;
			byte[] document = new byte[file.ContentLength];
			file.InputStream.Read(document, 0, file.ContentLength);
			System.UInt32 mimetype;
			FindMimeFromData(0, null, document, 256, null, 0, out mimetype, 0);
			System.IntPtr mimeTypePtr = new IntPtr(mimetype);
			string mime = Marshal.PtrToStringUni(mimeTypePtr);
			Marshal.FreeCoTaskMem(mimeTypePtr);
			return mime;
		}


		//public static string GetMimeTypeArchivoOriginal(string extension)
		//{
		//	if (extension == null)
		//		throw new ArgumentNullException("extension");

		//	if (extension.StartsWith("."))
		//		extension = extension.Substring(1);


		//	switch (extension.ToLower())
		//	{
		//		#region Big freaking list of mime types
		//		case "323": return "text/h323";
		//		case "3g2": return "video/3gpp2";
		//		case "3gp": return "video/3gpp";
		//		case "3gp2": return "video/3gpp2";
		//		case "3gpp": return "video/3gpp";
		//		case "7z": return "application/x-7z-compressed";
		//		case "aa": return "audio/audible";
		//		case "aac": return "audio/aac";
		//		case "aaf": return "application/octet-stream";
		//		case "aax": return "audio/vnd.audible.aax";
		//		case "ac3": return "audio/ac3";
		//		case "aca": return "application/octet-stream";
		//		case "accda": return "application/msaccess.addin";
		//		case "accdb": return "application/msaccess";
		//		case "accdc": return "application/msaccess.cab";
		//		case "accde": return "application/msaccess";
		//		case "accdr": return "application/msaccess.runtime";
		//		case "accdt": return "application/msaccess";
		//		case "accdw": return "application/msaccess.webapplication";
		//		case "accft": return "application/msaccess.ftemplate";
		//		case "acx": return "application/internet-property-stream";
		//		case "addin": return "text/xml";
		//		case "ade": return "application/msaccess";
		//		case "adobebridge": return "application/x-bridge-url";
		//		case "adp": return "application/msaccess";
		//		case "adt": return "audio/vnd.dlna.adts";
		//		case "adts": return "audio/aac";
		//		case "afm": return "application/octet-stream";
		//		case "ai": return "application/postscript";
		//		case "aif": return "audio/x-aiff";
		//		case "aifc": return "audio/aiff";
		//		case "aiff": return "audio/aiff";
		//		case "air": return "application/vnd.adobe.air-application-installer-package+zip";
		//		case "amc": return "application/x-mpeg";
		//		case "application": return "application/x-ms-application";
		//		case "art": return "image/x-jg";
		//		case "asa": return "application/xml";
		//		case "asax": return "application/xml";
		//		case "ascx": return "application/xml";
		//		case "asd": return "application/octet-stream";
		//		case "asf": return "video/x-ms-asf";
		//		case "ashx": return "application/xml";
		//		case "asi": return "application/octet-stream";
		//		case "asm": return "text/plain";
		//		case "asmx": return "application/xml";
		//		case "aspx": return "application/xml";
		//		case "asr": return "video/x-ms-asf";
		//		case "asx": return "video/x-ms-asf";
		//		case "atom": return "application/atom+xml";
		//		case "au": return "audio/basic";
		//		case "avi": return "video/x-msvideo";
		//		case "axs": return "application/olescript";
		//		case "bas": return "text/plain";
		//		case "bcpio": return "application/x-bcpio";
		//		case "bin": return "application/octet-stream";
		//		case "bmp": return "image/bmp";
		//		case "c": return "text/plain";
		//		case "cab": return "application/octet-stream";
		//		case "caf": return "audio/x-caf";
		//		case "calx": return "application/vnd.ms-office.calx";
		//		case "cat": return "application/vnd.ms-pki.seccat";
		//		case "cc": return "text/plain";
		//		case "cd": return "text/plain";
		//		case "cdda": return "audio/aiff";
		//		case "cdf": return "application/x-cdf";
		//		case "cer": return "application/x-x509-ca-cert";
		//		case "chm": return "application/octet-stream";
		//		case "class": return "application/x-java-applet";
		//		case "clp": return "application/x-msclip";
		//		case "cmx": return "image/x-cmx";
		//		case "cnf": return "text/plain";
		//		case "cod": return "image/cis-cod";
		//		case "config": return "application/xml";
		//		case "contact": return "text/x-ms-contact";
		//		case "coverage": return "application/xml";
		//		case "cpio": return "application/x-cpio";
		//		case "cpp": return "text/plain";
		//		case "crd": return "application/x-mscardfile";
		//		case "crl": return "application/pkix-crl";
		//		case "crt": return "application/x-x509-ca-cert";
		//		case "cs": return "text/plain";
		//		case "csdproj": return "text/plain";
		//		case "csh": return "application/x-csh";
		//		case "csproj": return "text/plain";
		//		case "css": return "text/css";
		//		case "csv": return "text/csv";
		//		case "cur": return "application/octet-stream";
		//		case "cxx": return "text/plain";
		//		case "dat": return "application/octet-stream";
		//		case "datasource": return "application/xml";
		//		case "dbproj": return "text/plain";
		//		case "dcr": return "application/x-director";
		//		case "def": return "text/plain";
		//		case "deploy": return "application/octet-stream";
		//		case "der": return "application/x-x509-ca-cert";
		//		case "dgml": return "application/xml";
		//		case "dib": return "image/bmp";
		//		case "dif": return "video/x-dv";
		//		case "dir": return "application/x-director";
		//		case "disco": return "text/xml";
		//		case "dll": return "application/x-msdownload";
		//		case "dll.config": return "text/xml";
		//		case "dlm": return "text/dlm";
		//		case "doc": return "application/msword";
		//		case "docm": return "application/vnd.ms-word.document.macroenabled.12";
		//		case "docx": return "application/vnd.openxmlformats-officedocument.wordprocessingml.document";
		//		case "dot": return "application/msword";
		//		case "dotm": return "application/vnd.ms-word.template.macroenabled.12";
		//		case "dotx": return "application/vnd.openxmlformats-officedocument.wordprocessingml.template";
		//		case "dsp": return "application/octet-stream";
		//		case "dsw": return "text/plain";
		//		case "dtd": return "text/xml";
		//		case "dtsconfig": return "text/xml";
		//		case "dv": return "video/x-dv";
		//		case "dvi": return "application/x-dvi";
		//		case "dwf": return "drawing/x-dwf";
		//		case "dwp": return "application/octet-stream";
		//		case "dxr": return "application/x-director";
		//		case "eml": return "message/rfc822";
		//		case "emz": return "application/octet-stream";
		//		case "eot": return "application/octet-stream";
		//		case "eps": return "application/postscript";
		//		case "etl": return "application/etl";
		//		case "etx": return "text/x-setext";
		//		case "evy": return "application/envoy";
		//		case "exe": return "application/octet-stream";
		//		case "exe.config": return "text/xml";
		//		case "fdf": return "application/vnd.fdf";
		//		case "fif": return "application/fractals";
		//		case "filters": return "application/xml";
		//		case "fla": return "application/octet-stream";
		//		case "flr": return "x-world/x-vrml";
		//		case "flv": return "video/x-flv";
		//		case "fsscript": return "application/fsharp-script";
		//		case "fsx": return "application/fsharp-script";
		//		case "generictest": return "application/xml";
		//		case "gif": return "image/gif";
		//		case "group": return "text/x-ms-group";
		//		case "gsm": return "audio/x-gsm";
		//		case "gtar": return "application/x-gtar";
		//		case "gz": return "application/x-gzip";
		//		case "h": return "text/plain";
		//		case "hdf": return "application/x-hdf";
		//		case "hdml": return "text/x-hdml";
		//		case "hhc": return "application/x-oleobject";
		//		case "hhk": return "application/octet-stream";
		//		case "hhp": return "application/octet-stream";
		//		case "hlp": return "application/winhlp";
		//		case "hpp": return "text/plain";
		//		case "hqx": return "application/mac-binhex40";
		//		case "hta": return "application/hta";
		//		case "htc": return "text/x-component";
		//		case "htm": return "text/html";
		//		case "html": return "text/html";
		//		case "htt": return "text/webviewhtml";
		//		case "hxa": return "application/xml";
		//		case "hxc": return "application/xml";
		//		case "hxd": return "application/octet-stream";
		//		case "hxe": return "application/xml";
		//		case "hxf": return "application/xml";
		//		case "hxh": return "application/octet-stream";
		//		case "hxi": return "application/octet-stream";
		//		case "hxk": return "application/xml";
		//		case "hxq": return "application/octet-stream";
		//		case "hxr": return "application/octet-stream";
		//		case "hxs": return "application/octet-stream";
		//		case "hxt": return "text/html";
		//		case "hxv": return "application/xml";
		//		case "hxw": return "application/octet-stream";
		//		case "hxx": return "text/plain";
		//		case "i": return "text/plain";
		//		case "ico": return "image/x-icon";
		//		case "ics": return "application/octet-stream";
		//		case "idl": return "text/plain";
		//		case "ief": return "image/ief";
		//		case "iii": return "application/x-iphone";
		//		case "inc": return "text/plain";
		//		case "inf": return "application/octet-stream";
		//		case "inl": return "text/plain";
		//		case "ins": return "application/x-internet-signup";
		//		case "ipa": return "application/x-itunes-ipa";
		//		case "ipg": return "application/x-itunes-ipg";
		//		case "ipproj": return "text/plain";
		//		case "ipsw": return "application/x-itunes-ipsw";
		//		case "iqy": return "text/x-ms-iqy";
		//		case "isp": return "application/x-internet-signup";
		//		case "ite": return "application/x-itunes-ite";
		//		case "itlp": return "application/x-itunes-itlp";
		//		case "itms": return "application/x-itunes-itms";
		//		case "itpc": return "application/x-itunes-itpc";
		//		case "ivf": return "video/x-ivf";
		//		case "jar": return "application/java-archive";
		//		case "java": return "application/octet-stream";
		//		case "jck": return "application/liquidmotion";
		//		case "jcz": return "application/liquidmotion";
		//		case "jfif": return "image/pjpeg";
		//		case "jnlp": return "application/x-java-jnlp-file";
		//		case "jpb": return "application/octet-stream";
		//		case "jpe": return "image/jpeg";
		//		case "jpeg": return "image/jpeg";
		//		case "jpg": return "image/jpeg";
		//		case "js": return "application/x-javascript";
		//		case "jsx": return "text/jscript";
		//		case "jsxbin": return "text/plain";
		//		case "latex": return "application/x-latex";
		//		case "library-ms": return "application/windows-library+xml";
		//		case "lit": return "application/x-ms-reader";
		//		case "loadtest": return "application/xml";
		//		case "lpk": return "application/octet-stream";
		//		case "lsf": return "video/x-la-asf";
		//		case "lst": return "text/plain";
		//		case "lsx": return "video/x-la-asf";
		//		case "lzh": return "application/octet-stream";
		//		case "m13": return "application/x-msmediaview";
		//		case "m14": return "application/x-msmediaview";
		//		case "m1v": return "video/mpeg";
		//		case "m2t": return "video/vnd.dlna.mpeg-tts";
		//		case "m2ts": return "video/vnd.dlna.mpeg-tts";
		//		case "m2v": return "video/mpeg";
		//		case "m3u": return "audio/x-mpegurl";
		//		case "m3u8": return "audio/x-mpegurl";
		//		case "m4a": return "audio/m4a";
		//		case "m4b": return "audio/m4b";
		//		case "m4p": return "audio/m4p";
		//		case "m4r": return "audio/x-m4r";
		//		case "m4v": return "video/x-m4v";
		//		case "mac": return "image/x-macpaint";
		//		case "mak": return "text/plain";
		//		case "man": return "application/x-troff-man";
		//		case "manifest": return "application/x-ms-manifest";
		//		case "map": return "text/plain";
		//		case "master": return "application/xml";
		//		case "mda": return "application/msaccess";
		//		case "mdb": return "application/x-msaccess";
		//		case "mde": return "application/msaccess";
		//		case "mdp": return "application/octet-stream";
		//		case "me": return "application/x-troff-me";
		//		case "mfp": return "application/x-shockwave-flash";
		//		case "mht": return "message/rfc822";
		//		case "mhtml": return "message/rfc822";
		//		case "mid": return "audio/mid";
		//		case "midi": return "audio/mid";
		//		case "mix": return "application/octet-stream";
		//		case "mk": return "text/plain";
		//		case "mmf": return "application/x-smaf";
		//		case "mno": return "text/xml";
		//		case "mny": return "application/x-msmoney";
		//		case "mod": return "video/mpeg";
		//		case "mov": return "video/quicktime";
		//		case "movie": return "video/x-sgi-movie";
		//		case "mp2": return "video/mpeg";
		//		case "mp2v": return "video/mpeg";
		//		case "mp3": return "audio/mpeg";
		//		case "mp4": return "video/mp4";
		//		case "mp4v": return "video/mp4";
		//		case "mpa": return "video/mpeg";
		//		case "mpe": return "video/mpeg";
		//		case "mpeg": return "video/mpeg";
		//		case "mpf": return "application/vnd.ms-mediapackage";
		//		case "mpg": return "video/mpeg";
		//		case "mpp": return "application/vnd.ms-project";
		//		case "mpv2": return "video/mpeg";
		//		case "mqv": return "video/quicktime";
		//		case "ms": return "application/x-troff-ms";
		//		case "msi": return "application/octet-stream";
		//		case "mso": return "application/octet-stream";
		//		case "mts": return "video/vnd.dlna.mpeg-tts";
		//		case "mtx": return "application/xml";
		//		case "mvb": return "application/x-msmediaview";
		//		case "mvc": return "application/x-miva-compiled";
		//		case "mxp": return "application/x-mmxp";
		//		case "nc": return "application/x-netcdf";
		//		case "nsc": return "video/x-ms-asf";
		//		case "nws": return "message/rfc822";
		//		case "ocx": return "application/octet-stream";
		//		case "oda": return "application/oda";
		//		case "odc": return "text/x-ms-odc";
		//		case "odh": return "text/plain";
		//		case "odl": return "text/plain";
		//		case "odp": return "application/vnd.oasis.opendocument.presentation";
		//		case "ods": return "application/oleobject";
		//		case "odt": return "application/vnd.oasis.opendocument.text";
		//		case "one": return "application/onenote";
		//		case "onea": return "application/onenote";
		//		case "onepkg": return "application/onenote";
		//		case "onetmp": return "application/onenote";
		//		case "onetoc": return "application/onenote";
		//		case "onetoc2": return "application/onenote";
		//		case "orderedtest": return "application/xml";
		//		case "osdx": return "application/opensearchdescription+xml";
		//		case "p10": return "application/pkcs10";
		//		case "p12": return "application/x-pkcs12";
		//		case "p7b": return "application/x-pkcs7-certificates";
		//		case "p7c": return "application/pkcs7-mime";
		//		case "p7m": return "application/pkcs7-mime";
		//		case "p7r": return "application/x-pkcs7-certreqresp";
		//		case "p7s": return "application/pkcs7-signature";
		//		case "pbm": return "image/x-portable-bitmap";
		//		case "pcast": return "application/x-podcast";
		//		case "pct": return "image/pict";
		//		case "pcx": return "application/octet-stream";
		//		case "pcz": return "application/octet-stream";
		//		case "pdf": return "application/pdf";
		//		case "pfb": return "application/octet-stream";
		//		case "pfm": return "application/octet-stream";
		//		case "pfx": return "application/x-pkcs12";
		//		case "pgm": return "image/x-portable-graymap";
		//		case "pic": return "image/pict";
		//		case "pict": return "image/pict";
		//		case "pkgdef": return "text/plain";
		//		case "pkgundef": return "text/plain";
		//		case "pko": return "application/vnd.ms-pki.pko";
		//		case "pls": return "audio/scpls";
		//		case "pma": return "application/x-perfmon";
		//		case "pmc": return "application/x-perfmon";
		//		case "pml": return "application/x-perfmon";
		//		case "pmr": return "application/x-perfmon";
		//		case "pmw": return "application/x-perfmon";
		//		case "png": return "image/png";
		//		case "pnm": return "image/x-portable-anymap";
		//		case "pnt": return "image/x-macpaint";
		//		case "pntg": return "image/x-macpaint";
		//		case "pnz": return "image/png";
		//		case "pot": return "application/vnd.ms-powerpoint";
		//		case "potm": return "application/vnd.ms-powerpoint.template.macroenabled.12";
		//		case "potx": return "application/vnd.openxmlformats-officedocument.presentationml.template";
		//		case "ppa": return "application/vnd.ms-powerpoint";
		//		case "ppam": return "application/vnd.ms-powerpoint.addin.macroenabled.12";
		//		case "ppm": return "image/x-portable-pixmap";
		//		case "pps": return "application/vnd.ms-powerpoint";
		//		case "ppsm": return "application/vnd.ms-powerpoint.slideshow.macroenabled.12";
		//		case "ppsx": return "application/vnd.openxmlformats-officedocument.presentationml.slideshow";
		//		case "ppt": return "application/vnd.ms-powerpoint";
		//		case "pptm": return "application/vnd.ms-powerpoint.presentation.macroenabled.12";
		//		case "pptx": return "application/vnd.openxmlformats-officedocument.presentationml.presentation";
		//		case "prf": return "application/pics-rules";
		//		case "prm": return "application/octet-stream";
		//		case "prx": return "application/octet-stream";
		//		case "ps": return "application/postscript";
		//		case "psc1": return "application/powershell";
		//		case "psd": return "application/octet-stream";
		//		case "psess": return "application/xml";
		//		case "psm": return "application/octet-stream";
		//		case "psp": return "application/octet-stream";
		//		case "pub": return "application/x-mspublisher";
		//		case "pwz": return "application/vnd.ms-powerpoint";
		//		case "qht": return "text/x-html-insertion";
		//		case "qhtm": return "text/x-html-insertion";
		//		case "qt": return "video/quicktime";
		//		case "qti": return "image/x-quicktime";
		//		case "qtif": return "image/x-quicktime";
		//		case "qtl": return "application/x-quicktimeplayer";
		//		case "qxd": return "application/octet-stream";
		//		case "ra": return "audio/x-pn-realaudio";
		//		case "ram": return "audio/x-pn-realaudio";
		//		case "rar": return "application/octet-stream";
		//		case "ras": return "image/x-cmu-raster";
		//		case "rat": return "application/rat-file";
		//		case "rc": return "text/plain";
		//		case "rc2": return "text/plain";
		//		case "rct": return "text/plain";
		//		case "rdlc": return "application/xml";
		//		case "resx": return "application/xml";
		//		case "rf": return "image/vnd.rn-realflash";
		//		case "rgb": return "image/x-rgb";
		//		case "rgs": return "text/plain";
		//		case "rm": return "application/vnd.rn-realmedia";
		//		case "rmi": return "audio/mid";
		//		case "rmp": return "application/vnd.rn-rn_music_package";
		//		case "roff": return "application/x-troff";
		//		case "rpm": return "audio/x-pn-realaudio-plugin";
		//		case "rqy": return "text/x-ms-rqy";
		//		case "rtf": return "application/rtf";
		//		case "rtx": return "text/richtext";
		//		case "ruleset": return "application/xml";
		//		case "s": return "text/plain";
		//		case "safariextz": return "application/x-safari-safariextz";
		//		case "scd": return "application/x-msschedule";
		//		case "sct": return "text/scriptlet";
		//		case "sd2": return "audio/x-sd2";
		//		case "sdp": return "application/sdp";
		//		case "sea": return "application/octet-stream";
		//		case "searchconnector-ms": return "application/windows-search-connector+xml";
		//		case "setpay": return "application/set-payment-initiation";
		//		case "setreg": return "application/set-registration-initiation";
		//		case "settings": return "application/xml";
		//		case "sgimb": return "application/x-sgimb";
		//		case "sgml": return "text/sgml";
		//		case "sh": return "application/x-sh";
		//		case "shar": return "application/x-shar";
		//		case "shtml": return "text/html";
		//		case "sit": return "application/x-stuffit";
		//		case "sitemap": return "application/xml";
		//		case "skin": return "application/xml";
		//		case "sldm": return "application/vnd.ms-powerpoint.slide.macroenabled.12";
		//		case "sldx": return "application/vnd.openxmlformats-officedocument.presentationml.slide";
		//		case "slk": return "application/vnd.ms-excel";
		//		case "sln": return "text/plain";
		//		case "slupkg-ms": return "application/x-ms-license";
		//		case "smd": return "audio/x-smd";
		//		case "smi": return "application/octet-stream";
		//		case "smx": return "audio/x-smd";
		//		case "smz": return "audio/x-smd";
		//		case "snd": return "audio/basic";
		//		case "snippet": return "application/xml";
		//		case "snp": return "application/octet-stream";
		//		case "sol": return "text/plain";
		//		case "sor": return "text/plain";
		//		case "spc": return "application/x-pkcs7-certificates";
		//		case "spl": return "application/futuresplash";
		//		case "src": return "application/x-wais-source";
		//		case "srf": return "text/plain";
		//		case "ssisdeploymentmanifest": return "text/xml";
		//		case "ssm": return "application/streamingmedia";
		//		case "sst": return "application/vnd.ms-pki.certstore";
		//		case "stl": return "application/vnd.ms-pki.stl";
		//		case "sv4cpio": return "application/x-sv4cpio";
		//		case "sv4crc": return "application/x-sv4crc";
		//		case "svc": return "application/xml";
		//		case "swf": return "application/x-shockwave-flash";
		//		case "t": return "application/x-troff";
		//		case "tar": return "application/x-tar";
		//		case "tcl": return "application/x-tcl";
		//		case "testrunconfig": return "application/xml";
		//		case "testsettings": return "application/xml";
		//		case "tex": return "application/x-tex";
		//		case "texi": return "application/x-texinfo";
		//		case "texinfo": return "application/x-texinfo";
		//		case "tgz": return "application/x-compressed";
		//		case "thmx": return "application/vnd.ms-officetheme";
		//		case "thn": return "application/octet-stream";
		//		case "tif": return "image/tiff";
		//		case "tiff": return "image/tiff";
		//		case "tlh": return "text/plain";
		//		case "tli": return "text/plain";
		//		case "toc": return "application/octet-stream";
		//		case "tr": return "application/x-troff";
		//		case "trm": return "application/x-msterminal";
		//		case "trx": return "application/xml";
		//		case "ts": return "video/vnd.dlna.mpeg-tts";
		//		case "tsv": return "text/tab-separated-values";
		//		case "ttf": return "application/octet-stream";
		//		case "tts": return "video/vnd.dlna.mpeg-tts";
		//		case "txt": return "text/plain";
		//		case "u32": return "application/octet-stream";
		//		case "uls": return "text/iuls";
		//		case "user": return "text/plain";
		//		case "ustar": return "application/x-ustar";
		//		case "vb": return "text/plain";
		//		case "vbdproj": return "text/plain";
		//		case "vbk": return "video/mpeg";
		//		case "vbproj": return "text/plain";
		//		case "vbs": return "text/vbscript";
		//		case "vcf": return "text/x-vcard";
		//		case "vcproj": return "application/xml";
		//		case "vcs": return "text/plain";
		//		case "vcxproj": return "application/xml";
		//		case "vddproj": return "text/plain";
		//		case "vdp": return "text/plain";
		//		case "vdproj": return "text/plain";
		//		case "vdx": return "application/vnd.ms-visio.viewer";
		//		case "vml": return "text/xml";
		//		case "vscontent": return "application/xml";
		//		case "vsct": return "text/xml";
		//		case "vsd": return "application/vnd.visio";
		//		case "vsi": return "application/ms-vsi";
		//		case "vsix": return "application/vsix";
		//		case "vsixlangpack": return "text/xml";
		//		case "vsixmanifest": return "text/xml";
		//		case "vsmdi": return "application/xml";
		//		case "vspscc": return "text/plain";
		//		case "vss": return "application/vnd.visio";
		//		case "vsscc": return "text/plain";
		//		case "vssettings": return "text/xml";
		//		case "vssscc": return "text/plain";
		//		case "vst": return "application/vnd.visio";
		//		case "vstemplate": return "text/xml";
		//		case "vsto": return "application/x-ms-vsto";
		//		case "vsw": return "application/vnd.visio";
		//		case "vsx": return "application/vnd.visio";
		//		case "vtx": return "application/vnd.visio";
		//		case "wav": return "audio/wav";
		//		case "wave": return "audio/wav";
		//		case "wax": return "audio/x-ms-wax";
		//		case "wbk": return "application/msword";
		//		case "wbmp": return "image/vnd.wap.wbmp";
		//		case "wcm": return "application/vnd.ms-works";
		//		case "wdb": return "application/vnd.ms-works";
		//		case "wdp": return "image/vnd.ms-photo";
		//		case "webarchive": return "application/x-safari-webarchive";
		//		case "webtest": return "application/xml";
		//		case "wiq": return "application/xml";
		//		case "wiz": return "application/msword";
		//		case "wks": return "application/vnd.ms-works";
		//		case "wlmp": return "application/wlmoviemaker";
		//		case "wlpginstall": return "application/x-wlpg-detect";
		//		case "wlpginstall3": return "application/x-wlpg3-detect";
		//		case "wm": return "video/x-ms-wm";
		//		case "wma": return "audio/x-ms-wma";
		//		case "wmd": return "application/x-ms-wmd";
		//		case "wmf": return "application/x-msmetafile";
		//		case "wml": return "text/vnd.wap.wml";
		//		case "wmlc": return "application/vnd.wap.wmlc";
		//		case "wmls": return "text/vnd.wap.wmlscript";
		//		case "wmlsc": return "application/vnd.wap.wmlscriptc";
		//		case "wmp": return "video/x-ms-wmp";
		//		case "wmv": return "video/x-ms-wmv";
		//		case "wmx": return "video/x-ms-wmx";
		//		case "wmz": return "application/x-ms-wmz";
		//		case "wpl": return "application/vnd.ms-wpl";
		//		case "wps": return "application/vnd.ms-works";
		//		case "wri": return "application/x-mswrite";
		//		case "wrl": return "x-world/x-vrml";
		//		case "wrz": return "x-world/x-vrml";
		//		case "wsc": return "text/scriptlet";
		//		case "wsdl": return "text/xml";
		//		case "wvx": return "video/x-ms-wvx";
		//		case "x": return "application/directx";
		//		case "xaf": return "x-world/x-vrml";
		//		case "xaml": return "application/xaml+xml";
		//		case "xap": return "application/x-silverlight-app";
		//		case "xbap": return "application/x-ms-xbap";
		//		case "xbm": return "image/x-xbitmap";
		//		case "xdr": return "text/plain";
		//		case "xht": return "application/xhtml+xml";
		//		case "xhtml": return "application/xhtml+xml";
		//		case "xla": return "application/vnd.ms-excel";
		//		case "xlam": return "application/vnd.ms-excel.addin.macroenabled.12";
		//		case "xlc": return "application/vnd.ms-excel";
		//		case "xld": return "application/vnd.ms-excel";
		//		case "xlk": return "application/vnd.ms-excel";
		//		case "xll": return "application/vnd.ms-excel";
		//		case "xlm": return "application/vnd.ms-excel";
		//		case "xls": return "application/vnd.ms-excel";
		//		case "xlsb": return "application/vnd.ms-excel.sheet.binary.macroenabled.12";
		//		case "xlsm": return "application/vnd.ms-excel.sheet.macroenabled.12";
		//		case "xlsx": return "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
		//		case "xlt": return "application/vnd.ms-excel";
		//		case "xltm": return "application/vnd.ms-excel.template.macroenabled.12";
		//		case "xltx": return "application/vnd.openxmlformats-officedocument.spreadsheetml.template";
		//		case "xlw": return "application/vnd.ms-excel";
		//		case "xml": return "text/xml";
		//		case "xmta": return "application/xml";
		//		case "xof": return "x-world/x-vrml";
		//		case "xoml": return "text/plain";
		//		case "xpm": return "image/x-xpixmap";
		//		case "xps": return "application/vnd.ms-xpsdocument";
		//		case "xrm-ms": return "text/xml";
		//		case "xsc": return "application/xml";
		//		case "xsd": return "text/xml";
		//		case "xsf": return "text/xml";
		//		case "xsl": return "text/xml";
		//		case "xslt": return "text/xml";
		//		case "xsn": return "application/octet-stream";
		//		case "xss": return "application/xml";
		//		case "xtp": return "application/octet-stream";
		//		case "xwd": return "image/x-xwindowdump";
		//		case "z": return "application/x-compress";
		//		case "zip": return "application/x-zip-compressed";
		//		#endregion
		//		default: return "application/octet-stream";
		//	}
		//}

		//public static string GetContentType(string fileName)
		//{
		//	if (knownTypes == null || mimeTypes == null)
		//		InitializeMimeTypeLists();
		//	string contentType = "";
		//	string extension = System.IO.Path.GetExtension(fileName).Replace(".", "").ToLower();
		//	mimeTypes.TryGetValue(extension, out contentType);
		//	if (string.IsNullOrEmpty(contentType) || knownTypes.Contains(contentType))
		//	{
		//		string headerType = ScanFileForMimeType(fileName);
		//		if (headerType != "application/octet-stream" || string.IsNullOrEmpty(contentType))
		//			contentType = headerType;
		//	}
		//	return contentType;
		//}

		//private static string ScanFileForMimeType(string fileName)
		//{
		//	try
		//	{
		//		byte[] buffer = new byte[256];
		//		using (FileStream fs = new FileStream(fileName, FileMode.Open))
		//		{
		//			int readLength = Convert.ToInt32(Math.Min(256, fs.Length));
		//			fs.Read(buffer, 0, readLength);
		//		}

		//		UInt32 mimeType = default(UInt32);
		//		FindMimeFromData(0, null, buffer, 256, null, 0, ref mimeType, 0);
		//		IntPtr mimeTypePtr = new IntPtr(mimeType);
		//		string mime = Marshal.PtrToStringUni(mimeTypePtr);
		//		Marshal.FreeCoTaskMem(mimeTypePtr);
		//		if (string.IsNullOrEmpty(mime))
		//			mime = "application/octet-stream";
		//		return mime;
		//	}
		//	catch (Exception ex)
		//	{
		//		return "application/octet-stream";
		//	}
		//}

		//private static void InitializeMimeTypeLists()
		//{
		//	knownTypes = new string[] {
		//	"text/plain",
		//	"text/html",
		//	"text/xml",
		//	"text/richtext",
		//	"text/scriptlet",
		//	"audio/x-aiff",
		//	"audio/basic",
		//	"audio/mid",
		//	"audio/wav",
		//	"image/gif",
		//	"image/jpeg",
		//	"image/pjpeg",
		//	"image/png",
		//	"image/x-png",
		//	"image/tiff",
		//	"image/bmp",
		//	"image/x-xbitmap",
		//	"image/x-jg",
		//	"image/x-emf",
		//	"image/x-wmf",
		//	"video/avi",
		//	"video/mpeg",
		//	"application/octet-stream",
		//	"application/postscript",
		//	"application/base64",
		//	"application/macbinhex40",
		//	"application/pdf",
		//	"application/xml",
		//	"application/atom+xml",
		//	"application/rss+xml",
		//	"application/x-compressed",
		//	"application/x-zip-compressed",
		//	"application/x-gzip-compressed",
		//	"application/java",
		//	"application/x-msdownload"
		//}.ToList();

		//	mimeTypes = new Dictionary<string, string>();
		//	mimeTypes.Add("3dm", "x-world/x-3dmf");
		//	mimeTypes.Add("3dmf", "x-world/x-3dmf");
		//	mimeTypes.Add("a", "application/octet-stream");
		//	mimeTypes.Add("aab", "application/x-authorware-bin");
		//	mimeTypes.Add("aam", "application/x-authorware-map");
		//	mimeTypes.Add("aas", "application/x-authorware-seg");
		//	mimeTypes.Add("abc", "text/vnd.abc");
		//	mimeTypes.Add("acgi", "text/html");
		//	mimeTypes.Add("afl", "video/animaflex");
		//	mimeTypes.Add("ai", "application/postscript");
		//	mimeTypes.Add("aif", "audio/aiff");
		//	mimeTypes.Add("aifc", "audio/aiff");
		//	mimeTypes.Add("aiff", "audio/aiff");
		//	mimeTypes.Add("aim", "application/x-aim");
		//	mimeTypes.Add("aip", "text/x-audiosoft-intra");
		//	mimeTypes.Add("ani", "application/x-navi-animation");
		//	mimeTypes.Add("aos", "application/x-nokia-9000-communicator-add-on-software");
		//	mimeTypes.Add("aps", "application/mime");
		//	mimeTypes.Add("arc", "application/octet-stream");
		//	mimeTypes.Add("arj", "application/arj");
		//	mimeTypes.Add("art", "image/x-jg");
		//	mimeTypes.Add("asf", "video/x-ms-asf");
		//	mimeTypes.Add("asm", "text/x-asm");
		//	mimeTypes.Add("asp", "text/asp");
		//	mimeTypes.Add("asx", "application/x-mplayer2");
		//	mimeTypes.Add("au", "audio/basic");
		//	mimeTypes.Add("avi", "video/avi");
		//	mimeTypes.Add("avs", "video/avs-video");
		//	mimeTypes.Add("bcpio", "application/x-bcpio");
		//	mimeTypes.Add("bin", "application/octet-stream");
		//	mimeTypes.Add("bm", "image/bmp");
		//	mimeTypes.Add("bmp", "image/bmp");
		//	mimeTypes.Add("boo", "application/book");
		//	mimeTypes.Add("book", "application/book");
		//	mimeTypes.Add("boz", "application/x-bzip2");
		//	mimeTypes.Add("bsh", "application/x-bsh");
		//	mimeTypes.Add("bz", "application/x-bzip");
		//	mimeTypes.Add("bz2", "application/x-bzip2");
		//	mimeTypes.Add("c", "text/plain");
		//	mimeTypes.Add("c++", "text/plain");
		//	mimeTypes.Add("cat", "application/vnd.ms-pki.seccat");
		//	mimeTypes.Add("cc", "text/plain");
		//	mimeTypes.Add("ccad", "application/clariscad");
		//	mimeTypes.Add("cco", "application/x-cocoa");
		//	mimeTypes.Add("cdf", "application/cdf");
		//	mimeTypes.Add("cer", "application/pkix-cert");
		//	mimeTypes.Add("cha", "application/x-chat");
		//	mimeTypes.Add("chat", "application/x-chat");
		//	mimeTypes.Add("class", "application/java");
		//	mimeTypes.Add("com", "application/octet-stream");
		//	mimeTypes.Add("conf", "text/plain");
		//	mimeTypes.Add("cpio", "application/x-cpio");
		//	mimeTypes.Add("cpp", "text/x-c");
		//	mimeTypes.Add("cpt", "application/x-cpt");
		//	mimeTypes.Add("crl", "application/pkcs-crl");
		//	mimeTypes.Add("css", "text/css");
		//	mimeTypes.Add("def", "text/plain");
		//	mimeTypes.Add("der", "application/x-x509-ca-cert");
		//	mimeTypes.Add("dif", "video/x-dv");
		//	mimeTypes.Add("dir", "application/x-director");
		//	mimeTypes.Add("dl", "video/dl");
		//	mimeTypes.Add("doc", "application/msword");
		//	mimeTypes.Add("dot", "application/msword");
		//	mimeTypes.Add("dp", "application/commonground");
		//	mimeTypes.Add("drw", "application/drafting");
		//	mimeTypes.Add("dump", "application/octet-stream");
		//	mimeTypes.Add("dv", "video/x-dv");
		//	mimeTypes.Add("dvi", "application/x-dvi");
		//	mimeTypes.Add("dwf", "drawing/x-dwf (old)");
		//	mimeTypes.Add("dwg", "application/acad");
		//	mimeTypes.Add("dxf", "application/dxf");
		//	mimeTypes.Add("eps", "application/postscript");
		//	mimeTypes.Add("es", "application/x-esrehber");
		//	mimeTypes.Add("etx", "text/x-setext");
		//	mimeTypes.Add("evy", "application/envoy");
		//	mimeTypes.Add("exe", "application/octet-stream");
		//	mimeTypes.Add("f", "text/plain");
		//	mimeTypes.Add("f90", "text/x-fortran");
		//	mimeTypes.Add("fdf", "application/vnd.fdf");
		//	mimeTypes.Add("fif", "image/fif");
		//	mimeTypes.Add("fli", "video/fli");
		//	mimeTypes.Add("flv", "video/x-flv");
		//	mimeTypes.Add("for", "text/x-fortran");
		//	mimeTypes.Add("fpx", "image/vnd.fpx");
		//	mimeTypes.Add("g", "text/plain");
		//	mimeTypes.Add("g3", "image/g3fax");
		//	mimeTypes.Add("gif", "image/gif");
		//	mimeTypes.Add("gl", "video/gl");
		//	mimeTypes.Add("gsd", "audio/x-gsm");
		//	mimeTypes.Add("gtar", "application/x-gtar");
		//	mimeTypes.Add("gz", "application/x-compressed");
		//	mimeTypes.Add("h", "text/plain");
		//	mimeTypes.Add("help", "application/x-helpfile");
		//	mimeTypes.Add("hgl", "application/vnd.hp-hpgl");
		//	mimeTypes.Add("hh", "text/plain");
		//	mimeTypes.Add("hlp", "application/x-winhelp");
		//	mimeTypes.Add("htc", "text/x-component");
		//	mimeTypes.Add("htm", "text/html");
		//	mimeTypes.Add("html", "text/html");
		//	mimeTypes.Add("htmls", "text/html");
		//	mimeTypes.Add("htt", "text/webviewhtml");
		//	mimeTypes.Add("htx", "text/html");
		//	mimeTypes.Add("ice", "x-conference/x-cooltalk");
		//	mimeTypes.Add("ico", "image/x-icon");
		//	mimeTypes.Add("idc", "text/plain");
		//	mimeTypes.Add("ief", "image/ief");
		//	mimeTypes.Add("iefs", "image/ief");
		//	mimeTypes.Add("iges", "application/iges");
		//	mimeTypes.Add("igs", "application/iges");
		//	mimeTypes.Add("ima", "application/x-ima");
		//	mimeTypes.Add("imap", "application/x-httpd-imap");
		//	mimeTypes.Add("inf", "application/inf");
		//	mimeTypes.Add("ins", "application/x-internett-signup");
		//	mimeTypes.Add("ip", "application/x-ip2");
		//	mimeTypes.Add("isu", "video/x-isvideo");
		//	mimeTypes.Add("it", "audio/it");
		//	mimeTypes.Add("iv", "application/x-inventor");
		//	mimeTypes.Add("ivr", "i-world/i-vrml");
		//	mimeTypes.Add("ivy", "application/x-livescreen");
		//	mimeTypes.Add("jam", "audio/x-jam");
		//	mimeTypes.Add("jav", "text/plain");
		//	mimeTypes.Add("java", "text/plain");
		//	mimeTypes.Add("jcm", "application/x-java-commerce");
		//	mimeTypes.Add("jfif", "image/jpeg");
		//	mimeTypes.Add("jfif-tbnl", "image/jpeg");
		//	mimeTypes.Add("jpe", "image/jpeg");
		//	mimeTypes.Add("jpeg", "image/jpeg");
		//	mimeTypes.Add("jpg", "image/jpeg");
		//	mimeTypes.Add("jps", "image/x-jps");
		//	mimeTypes.Add("js", "application/x-javascript");
		//	mimeTypes.Add("jut", "image/jutvision");
		//	mimeTypes.Add("kar", "audio/midi");
		//	mimeTypes.Add("ksh", "application/x-ksh");
		//	mimeTypes.Add("la", "audio/nspaudio");
		//	mimeTypes.Add("lam", "audio/x-liveaudio");
		//	mimeTypes.Add("latex", "application/x-latex");
		//	mimeTypes.Add("lha", "application/lha");
		//	mimeTypes.Add("lhx", "application/octet-stream");
		//	mimeTypes.Add("list", "text/plain");
		//	mimeTypes.Add("lma", "audio/nspaudio");
		//	mimeTypes.Add("log", "text/plain");
		//	mimeTypes.Add("lsp", "application/x-lisp");
		//	mimeTypes.Add("lst", "text/plain");
		//	mimeTypes.Add("lsx", "text/x-la-asf");
		//	mimeTypes.Add("ltx", "application/x-latex");
		//	mimeTypes.Add("lzh", "application/octet-stream");
		//	mimeTypes.Add("lzx", "application/lzx");
		//	mimeTypes.Add("m", "text/plain");
		//	mimeTypes.Add("m1v", "video/mpeg");
		//	mimeTypes.Add("m2a", "audio/mpeg");
		//	mimeTypes.Add("m2v", "video/mpeg");
		//	mimeTypes.Add("m3u", "audio/x-mpequrl");
		//	mimeTypes.Add("man", "application/x-troff-man");
		//	mimeTypes.Add("map", "application/x-navimap");
		//	mimeTypes.Add("mar", "text/plain");
		//	mimeTypes.Add("mbd", "application/mbedlet");
		//	mimeTypes.Add("mc$", "application/x-magic-cap-package-1.0");
		//	mimeTypes.Add("mcd", "application/mcad");
		//	mimeTypes.Add("mcf", "image/vasa");
		//	mimeTypes.Add("mcp", "application/netmc");
		//	mimeTypes.Add("me", "application/x-troff-me");
		//	mimeTypes.Add("mht", "message/rfc822");
		//	mimeTypes.Add("mhtml", "message/rfc822");
		//	mimeTypes.Add("mid", "audio/midi");
		//	mimeTypes.Add("midi", "audio/midi");
		//	mimeTypes.Add("mif", "application/x-frame");
		//	mimeTypes.Add("mime", "message/rfc822");
		//	mimeTypes.Add("mjf", "audio/x-vnd.audioexplosion.mjuicemediafile");
		//	mimeTypes.Add("mjpg", "video/x-motion-jpeg");
		//	mimeTypes.Add("mm", "application/base64");
		//	mimeTypes.Add("mme", "application/base64");
		//	mimeTypes.Add("mod", "audio/mod");
		//	mimeTypes.Add("moov", "video/quicktime");
		//	mimeTypes.Add("mov", "video/quicktime");
		//	mimeTypes.Add("movie", "video/x-sgi-movie");
		//	mimeTypes.Add("mp2", "audio/mpeg");
		//	mimeTypes.Add("mp3", "audio/mpeg3");
		//	mimeTypes.Add("mpa", "audio/mpeg");
		//	mimeTypes.Add("mpc", "application/x-project");
		//	mimeTypes.Add("mpe", "video/mpeg");
		//	mimeTypes.Add("mpeg", "video/mpeg");
		//	mimeTypes.Add("mpg", "video/mpeg");
		//	mimeTypes.Add("mpga", "audio/mpeg");
		//	mimeTypes.Add("mpp", "application/vnd.ms-project");
		//	mimeTypes.Add("mpt", "application/x-project");
		//	mimeTypes.Add("mpv", "application/x-project");
		//	mimeTypes.Add("mpx", "application/x-project");
		//	mimeTypes.Add("mrc", "application/marc");
		//	mimeTypes.Add("ms", "application/x-troff-ms");
		//	mimeTypes.Add("mv", "video/x-sgi-movie");
		//	mimeTypes.Add("my", "audio/make");
		//	mimeTypes.Add("mzz", "application/x-vnd.audioexplosion.mzz");
		//	mimeTypes.Add("nap", "image/naplps");
		//	mimeTypes.Add("naplps", "image/naplps");
		//	mimeTypes.Add("nc", "application/x-netcdf");
		//	mimeTypes.Add("ncm", "application/vnd.nokia.configuration-message");
		//	mimeTypes.Add("nif", "image/x-niff");
		//	mimeTypes.Add("niff", "image/x-niff");
		//	mimeTypes.Add("nix", "application/x-mix-transfer");
		//	mimeTypes.Add("nsc", "application/x-conference");
		//	mimeTypes.Add("nvd", "application/x-navidoc");
		//	mimeTypes.Add("o", "application/octet-stream");
		//	mimeTypes.Add("oda", "application/oda");
		//	mimeTypes.Add("omc", "application/x-omc");
		//	mimeTypes.Add("omcd", "application/x-omcdatamaker");
		//	mimeTypes.Add("omcr", "application/x-omcregerator");
		//	mimeTypes.Add("p", "text/x-pascal");
		//	mimeTypes.Add("p10", "application/pkcs10");
		//	mimeTypes.Add("p12", "application/pkcs-12");
		//	mimeTypes.Add("p7a", "application/x-pkcs7-signature");
		//	mimeTypes.Add("p7c", "application/pkcs7-mime");
		//	mimeTypes.Add("pas", "text/pascal");
		//	mimeTypes.Add("pbm", "image/x-portable-bitmap");
		//	mimeTypes.Add("pcl", "application/vnd.hp-pcl");
		//	mimeTypes.Add("pct", "image/x-pict");
		//	mimeTypes.Add("pcx", "image/x-pcx");
		//	mimeTypes.Add("pdf", "application/pdf");
		//	mimeTypes.Add("pfunk", "audio/make");
		//	mimeTypes.Add("pgm", "image/x-portable-graymap");
		//	mimeTypes.Add("pic", "image/pict");
		//	mimeTypes.Add("pict", "image/pict");
		//	mimeTypes.Add("pkg", "application/x-newton-compatible-pkg");
		//	mimeTypes.Add("pko", "application/vnd.ms-pki.pko");
		//	mimeTypes.Add("pl", "text/plain");
		//	mimeTypes.Add("plx", "application/x-pixclscript");
		//	mimeTypes.Add("pm", "image/x-xpixmap");
		//	mimeTypes.Add("png", "image/png");
		//	mimeTypes.Add("pnm", "application/x-portable-anymap");
		//	mimeTypes.Add("pot", "application/mspowerpoint");
		//	mimeTypes.Add("pov", "model/x-pov");
		//	mimeTypes.Add("ppa", "application/vnd.ms-powerpoint");
		//	mimeTypes.Add("ppm", "image/x-portable-pixmap");
		//	mimeTypes.Add("pps", "application/mspowerpoint");
		//	mimeTypes.Add("ppt", "application/mspowerpoint");
		//	mimeTypes.Add("ppz", "application/mspowerpoint");
		//	mimeTypes.Add("pre", "application/x-freelance");
		//	mimeTypes.Add("prt", "application/pro_eng");
		//	mimeTypes.Add("ps", "application/postscript");
		//	mimeTypes.Add("psd", "application/octet-stream");
		//	mimeTypes.Add("pvu", "paleovu/x-pv");
		//	mimeTypes.Add("pwz", "application/vnd.ms-powerpoint");
		//	mimeTypes.Add("py", "text/x-script.phyton");
		//	mimeTypes.Add("pyc", "applicaiton/x-bytecode.python");
		//	mimeTypes.Add("qcp", "audio/vnd.qcelp");
		//	mimeTypes.Add("qd3", "x-world/x-3dmf");
		//	mimeTypes.Add("qd3d", "x-world/x-3dmf");
		//	mimeTypes.Add("qif", "image/x-quicktime");
		//	mimeTypes.Add("qt", "video/quicktime");
		//	mimeTypes.Add("qtc", "video/x-qtc");
		//	mimeTypes.Add("qti", "image/x-quicktime");
		//	mimeTypes.Add("qtif", "image/x-quicktime");
		//	mimeTypes.Add("ra", "audio/x-pn-realaudio");
		//	mimeTypes.Add("ram", "audio/x-pn-realaudio");
		//	mimeTypes.Add("ras", "application/x-cmu-raster");
		//	mimeTypes.Add("rast", "image/cmu-raster");
		//	mimeTypes.Add("rexx", "text/x-script.rexx");
		//	mimeTypes.Add("rf", "image/vnd.rn-realflash");
		//	mimeTypes.Add("rgb", "image/x-rgb");
		//	mimeTypes.Add("rm", "application/vnd.rn-realmedia");
		//	mimeTypes.Add("rmi", "audio/mid");
		//	mimeTypes.Add("rmm", "audio/x-pn-realaudio");
		//	mimeTypes.Add("rmp", "audio/x-pn-realaudio");
		//	mimeTypes.Add("rng", "application/ringing-tones");
		//	mimeTypes.Add("rnx", "application/vnd.rn-realplayer");
		//	mimeTypes.Add("roff", "application/x-troff");
		//	mimeTypes.Add("rp", "image/vnd.rn-realpix");
		//	mimeTypes.Add("rpm", "audio/x-pn-realaudio-plugin");
		//	mimeTypes.Add("rt", "text/richtext");
		//	mimeTypes.Add("rtf", "text/richtext");
		//	mimeTypes.Add("rtx", "application/rtf");
		//	mimeTypes.Add("rv", "video/vnd.rn-realvideo");
		//	mimeTypes.Add("s", "text/x-asm");
		//	mimeTypes.Add("s3m", "audio/s3m");
		//	mimeTypes.Add("saveme", "application/octet-stream");
		//	mimeTypes.Add("sbk", "application/x-tbook");
		//	mimeTypes.Add("scm", "application/x-lotusscreencam");
		//	mimeTypes.Add("sdml", "text/plain");
		//	mimeTypes.Add("sdp", "application/sdp");
		//	mimeTypes.Add("sdr", "application/sounder");
		//	mimeTypes.Add("sea", "application/sea");
		//	mimeTypes.Add("set", "application/set");
		//	mimeTypes.Add("sgm", "text/sgml");
		//	mimeTypes.Add("sgml", "text/sgml");
		//	mimeTypes.Add("sh", "application/x-bsh");
		//	mimeTypes.Add("shtml", "text/html");
		//	mimeTypes.Add("sid", "audio/x-psid");
		//	mimeTypes.Add("sit", "application/x-sit");
		//	mimeTypes.Add("skd", "application/x-koan");
		//	mimeTypes.Add("skm", "application/x-koan");
		//	mimeTypes.Add("skp", "application/x-koan");
		//	mimeTypes.Add("skt", "application/x-koan");
		//	mimeTypes.Add("sl", "application/x-seelogo");
		//	mimeTypes.Add("smi", "application/smil");
		//	mimeTypes.Add("smil", "application/smil");
		//	mimeTypes.Add("snd", "audio/basic");
		//	mimeTypes.Add("sol", "application/solids");
		//	mimeTypes.Add("spc", "application/x-pkcs7-certificates");
		//	mimeTypes.Add("spl", "application/futuresplash");
		//	mimeTypes.Add("spr", "application/x-sprite");
		//	mimeTypes.Add("sprite", "application/x-sprite");
		//	mimeTypes.Add("src", "application/x-wais-source");
		//	mimeTypes.Add("ssi", "text/x-server-parsed-html");
		//	mimeTypes.Add("ssm", "application/streamingmedia");
		//	mimeTypes.Add("sst", "application/vnd.ms-pki.certstore");
		//	mimeTypes.Add("step", "application/step");
		//	mimeTypes.Add("stl", "application/sla");
		//	mimeTypes.Add("stp", "application/step");
		//	mimeTypes.Add("sv4cpio", "application/x-sv4cpio");
		//	mimeTypes.Add("sv4crc", "application/x-sv4crc");
		//	mimeTypes.Add("svf", "image/vnd.dwg");
		//	mimeTypes.Add("svr", "application/x-world");
		//	mimeTypes.Add("swf", "application/x-shockwave-flash");
		//	mimeTypes.Add("t", "application/x-troff");
		//	mimeTypes.Add("talk", "text/x-speech");
		//	mimeTypes.Add("tar", "application/x-tar");
		//	mimeTypes.Add("tbk", "application/toolbook");
		//	mimeTypes.Add("tcl", "application/x-tcl");
		//	mimeTypes.Add("tcsh", "text/x-script.tcsh");
		//	mimeTypes.Add("tex", "application/x-tex");
		//	mimeTypes.Add("texi", "application/x-texinfo");
		//	mimeTypes.Add("texinfo", "application/x-texinfo");
		//	mimeTypes.Add("text", "text/plain");
		//	mimeTypes.Add("tgz", "application/x-compressed");
		//	mimeTypes.Add("tif", "image/tiff");
		//	mimeTypes.Add("tr", "application/x-troff");
		//	mimeTypes.Add("tsi", "audio/tsp-audio");
		//	mimeTypes.Add("tsp", "audio/tsplayer");
		//	mimeTypes.Add("tsv", "text/tab-separated-values");
		//	mimeTypes.Add("turbot", "image/florian");
		//	mimeTypes.Add("txt", "text/plain");
		//	mimeTypes.Add("uil", "text/x-uil");
		//	mimeTypes.Add("uni", "text/uri-list");
		//	mimeTypes.Add("unis", "text/uri-list");
		//	mimeTypes.Add("unv", "application/i-deas");
		//	mimeTypes.Add("uri", "text/uri-list");
		//	mimeTypes.Add("uris", "text/uri-list");
		//	mimeTypes.Add("ustar", "application/x-ustar");
		//	mimeTypes.Add("uu", "application/octet-stream");
		//	mimeTypes.Add("vcd", "application/x-cdlink");
		//	mimeTypes.Add("vcs", "text/x-vcalendar");
		//	mimeTypes.Add("vda", "application/vda");
		//	mimeTypes.Add("vdo", "video/vdo");
		//	mimeTypes.Add("vew", "application/groupwise");
		//	mimeTypes.Add("viv", "video/vivo");
		//	mimeTypes.Add("vivo", "video/vivo");
		//	mimeTypes.Add("vmd", "application/vocaltec-media-desc");
		//	mimeTypes.Add("vmf", "application/vocaltec-media-file");
		//	mimeTypes.Add("voc", "audio/voc");
		//	mimeTypes.Add("vos", "video/vosaic");
		//	mimeTypes.Add("vox", "audio/voxware");
		//	mimeTypes.Add("vqe", "audio/x-twinvq-plugin");
		//	mimeTypes.Add("vqf", "audio/x-twinvq");
		//	mimeTypes.Add("vql", "audio/x-twinvq-plugin");
		//	mimeTypes.Add("vrml", "application/x-vrml");
		//	mimeTypes.Add("vrt", "x-world/x-vrt");
		//	mimeTypes.Add("vsd", "application/x-visio");
		//	mimeTypes.Add("vst", "application/x-visio");
		//	mimeTypes.Add("vsw", "application/x-visio");
		//	mimeTypes.Add("w60", "application/wordperfect6.0");
		//	mimeTypes.Add("w61", "application/wordperfect6.1");
		//	mimeTypes.Add("w6w", "application/msword");
		//	mimeTypes.Add("wav", "audio/wav");
		//	mimeTypes.Add("wb1", "application/x-qpro");
		//	mimeTypes.Add("wbmp", "image/vnd.wap.wbmp");
		//	mimeTypes.Add("web", "application/vnd.xara");
		//	mimeTypes.Add("wiz", "application/msword");
		//	mimeTypes.Add("wk1", "application/x-123");
		//	mimeTypes.Add("wmf", "windows/metafile");
		//	mimeTypes.Add("wml", "text/vnd.wap.wml");
		//	mimeTypes.Add("wmlc", "application/vnd.wap.wmlc");
		//	mimeTypes.Add("wmls", "text/vnd.wap.wmlscript");
		//	mimeTypes.Add("wmlsc", "application/vnd.wap.wmlscriptc");
		//	mimeTypes.Add("word", "application/msword");
		//	mimeTypes.Add("wp", "application/wordperfect");
		//	mimeTypes.Add("wp5", "application/wordperfect");
		//	mimeTypes.Add("wp6", "application/wordperfect");
		//	mimeTypes.Add("wpd", "application/wordperfect");
		//	mimeTypes.Add("wq1", "application/x-lotus");
		//	mimeTypes.Add("wri", "application/mswrite");
		//	mimeTypes.Add("wrl", "application/x-world");
		//	mimeTypes.Add("wrz", "model/vrml");
		//	mimeTypes.Add("wsc", "text/scriplet");
		//	mimeTypes.Add("wsrc", "application/x-wais-source");
		//	mimeTypes.Add("wtk", "application/x-wintalk");
		//	mimeTypes.Add("xbm", "image/x-xbitmap");
		//	mimeTypes.Add("xdr", "video/x-amt-demorun");
		//	mimeTypes.Add("xgz", "xgl/drawing");
		//	mimeTypes.Add("xif", "image/vnd.xiff");
		//	mimeTypes.Add("xl", "application/excel");
		//	mimeTypes.Add("xla", "application/excel");
		//	mimeTypes.Add("xlb", "application/excel");
		//	mimeTypes.Add("xlc", "application/excel");
		//	mimeTypes.Add("xld", "application/excel");
		//	mimeTypes.Add("xlk", "application/excel");
		//	mimeTypes.Add("xll", "application/excel");
		//	mimeTypes.Add("xlm", "application/excel");
		//	mimeTypes.Add("xls", "application/excel");
		//	mimeTypes.Add("xlsx", "application/excel");
		//	mimeTypes.Add("xlt", "application/excel");
		//	mimeTypes.Add("xlv", "application/excel");
		//	mimeTypes.Add("xlw", "application/excel");
		//	mimeTypes.Add("xm", "audio/xm");
		//	mimeTypes.Add("xml", "text/xml");
		//	mimeTypes.Add("xmz", "xgl/movie");
		//	mimeTypes.Add("xpix", "application/x-vnd.ls-xpix");
		//	mimeTypes.Add("xpm", "image/x-xpixmap");
		//	mimeTypes.Add("x-png", "image/png");
		//	mimeTypes.Add("xsr", "video/x-amt-showrun");
		//	mimeTypes.Add("xwd", "image/x-xwd");
		//	mimeTypes.Add("xyz", "chemical/x-pdb");
		//	mimeTypes.Add("z", "application/x-compress");
		//	mimeTypes.Add("zip", "application/x-compressed");
		//	mimeTypes.Add("zoo", "application/octet-stream");
		//	mimeTypes.Add("zsh", "text/x-script.zsh");
		//}
	}
}